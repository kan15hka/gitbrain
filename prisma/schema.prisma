// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}

model User{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    imageUrl String?
    firstName String?
    lastName String?
    emailAddress String @unique
    credits Int @default(150)

    userToProjects UserToProjects[]
    questionsAsked QuestionAnswer[]
}
model Project{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name String
    repoURL String
    deletedAt DateTime?

    userToProjects UserToProjects[]
    commits Commit[]
    sourceCodeEmbeddings SourceCodeEmbedding[]
    savedQuestions QuestionAnswer[]

}

model UserToProjects{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId String
    projectId String

    user User @relation(fields: [userId],references: [id])
    project Project @relation(fields: [projectId] ,references: [id])

    @@unique([userId,projectId])
}
model SourceCodeEmbedding{
    id String @id @default(uuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode String
    fileName String
    summary String

    projectId String
    project Project @relation(fields: [projectId],references: [id])
}

model QuestionAnswer{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question String
    answer String

    fileReferences Json?

    projectId String
    project Project @relation(fields: [projectId],references: [id])
    userId String
    user User @relation(fields: [userId],references: [id])

}
model Commit{
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project Project @relation(fields: [projectId],references: [id])

    commitMessage String
    commitHash String
    commitAuthorName String
    commitAuthorAvatar String
    commitDate String
    //Ai genearted commit summary
    summary String
}